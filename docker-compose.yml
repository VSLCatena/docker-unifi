networks:
  net:
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: ${CONTAINER_SUBNET}
    driver_opts:
      com.docker.network.bridge.name: unifi_net

volumes:
   data:
   init:
   db:

services:
  unifi:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi
    hostname: unifi
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.rule=Host(`${TRAEFIK_FQDN}`)"
      - "traefik.http.routers.unifi.entrypoints=${TRAEFIK_ENTRYPOINT}"
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_DBNAME=${MONGO_DBNAME}
      - MONGO_PORT=27017
      - MONGO_AUTHSOURCE=admin
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      - MONGO_TLS= #optional
    volumes:
      - data:/config
    ports:
      - ${IP_PUBLIC}:3478:3478/udp #STUN
      - ${IP_PUBLIC}:10001:10001/udp #DEVICE Discovery
      - ${IP_PUBLIC}:8080:8080 #Device & App Communication
      - ${IP_PUBLIC}:8443:8443 #GUI
      - ${IP_PUBLIC}:1900:1900/udp #Make App discoverable on L2 network
      - ${IP_PUBLIC}:8843:8843 #Used for HTTPS portal redirection.
#      - ${IP_PUBLIC}:8880:8880 #Used for HTTP portal redirection.
      - ${IP_PUBLIC}:6789:6789 #Used for UniFi mobile speed test.
#      - ${IP_PUBLIC}:5514:5514/udp #Used for remote syslog capture.
    depends_on:
      - unifi.db
    restart: unless-stopped
    networks:
      - net
  
  unifi.db:
    image: docker.io/mongo:7.0
    container_name: unifi.db
    hostname: unifi.db
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_DBNAME=${MONGO_DBNAME}
      - MONGO_AUTHSOURCE=admin
    volumes:
      - db:/data/db
      - init:/docker-entrypoint-initdb.d
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh $MONGO_AUTHSOURCE -u $MONGO_USER -p $MONGO_PASS --quiet | grep 1
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks: 
      - net

